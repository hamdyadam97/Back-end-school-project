# Generated by Django 5.0 on 2023-12-19 21:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import stdimage.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('Date_Created', models.DateField()),
                ('country_flag', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='countries_flags/', variations={'thumbnail': {'crop': True, 'height': 100, 'width': 100}})),
            ],
            options={
                'verbose_name': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='profiles/', variations={'thumbnail': {'crop': True, 'height': 100, 'width': 100}})),
                ('email', models.EmailField(help_text='عنوان الميل', max_length=254)),
                ('role', models.CharField(choices=[('student', 'Student'), ('parent', 'Parent'), ('teacher', 'Teacher')], help_text='دور المستخدم', max_length=10)),
                ('telephone', models.CharField(max_length=15)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('prefer_not_to_answer', 'Prefer not to answer')], max_length=50)),
                ('birthday', models.DateField(blank=True, default=None, null=True)),
                ('address', models.TextField(blank=True, default=None, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.countries')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personnel_id', models.CharField(blank=True, max_length=20, null=True)),
                ('role_teacher', models.CharField(blank=True, max_length=50)),
                ('designation_faculty', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('basic_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('type_of_contract', models.CharField(blank=True, max_length=50, null=True)),
                ('work_shift', models.CharField(blank=True, max_length=50, null=True)),
                ('work_location', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_date', models.DateField(null=True)),
                ('barcode', models.CharField(blank=True, max_length=20, null=True)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_number', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('student_name', models.CharField(max_length=255)),
                ('class_name', models.CharField(max_length=50)),
                ('mobile_phone_number', models.CharField(max_length=15)),
                ('parents', models.ManyToManyField(limit_choices_to={'role': 'parent'}, related_name='children', to='users.user')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Parent_name', models.CharField(blank=True, max_length=255, null=True)),
                ('Parent_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('Parent_occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('children', models.ManyToManyField(limit_choices_to={'role': 'student'}, related_name='student', to='users.student')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
        ),
        migrations.CreateModel(
            name='CustomPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_create', models.BooleanField(default=False)),
                ('can_update', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
            options={
                'verbose_name': 'Roles and permissions',
            },
        ),
    ]
